name: .NET Release Publisher

# This workflow runs when a tag matching the 'v*.*.*' pattern is pushed (e.g., v1.0.0)
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-and-release:
    name: Build and Release
    # We use the latest Ubuntu runner as it can build for all target platforms
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # Build the application for each target platform
      - name: Build project for each platform
        run: |
          # Extract the version number from the tag by removing the 'v' prefix (e.g., 'v1.0.1' becomes '1.0.1')
          VERSION_NUMBER=${{ github.ref_name#v }}
          for rid in win-x64 linux-x64 osx-x64; do
            dotnet publish ./file_sort/file_sort.csproj --configuration Release --runtime $rid --output ./publish/$rid /p:Version=$VERSION_NUMBER
          done

      # Package the results into archives
      - name: Create archives
        run: |
          cd ./publish/win-x64 && zip ../../file_sort-win-x64.zip ./* && cd ../..
          cd ./publish/linux-x64 && tar -czvf ../../file_sort-linux-x64.tar.gz ./* && cd ../..
          cd ./publish/osx-x64 && tar -czvf ../../file_sort-osx-x64.tar.gz ./* && cd ../..

      # Create a GitHub Release and upload the artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # The tag name will be used for the release
          tag_name: ${{ github.ref_name }}
          # The name of the release
          name: Release ${{ github.ref_name }}
          # Enable automatic generation of release notes based on commits
          generate_release_notes: true
          # Specify which files to attach to the release
          files: |
            ./file_sort-win-x64.zip
            ./file_sort-linux-x64.tar.gz
            ./file_sort-osx-x64.tar.gz